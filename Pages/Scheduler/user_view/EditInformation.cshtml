@page
@model zerix_fe_dev.Pages.Scheduler.user_view.EditInformationModel
@{
    Layout = "_Scheduler";
    ViewData["Title"] = "Edit Information";
    ViewData["User"] = "Admin";
}

@await Html.PartialAsync("../user_view/_Navigation")

@await Html.PartialAsync("../user_view/_MobileSidebar")

<div class="container px-4 my-3 pt-md-3 pt-3">
    <!-- Desktop Header -->
    <div class="d-none d-md-flex align-items-center mb-4 position-relative information-desktop-header">
        <button class="btn btn-link p-0 back-link text-decoration-none" onclick="window.history.back()">
           <i class="bi bi-chevron-left"></i>
            <span class="text-orange fs-14">Back</span>
        </button>
        <h2 class="fs-32 ff-default font-darkgray fw-400 position-absolute start-50 translate-middle-x scheduler-title-desktop">Your Information</h2>
    </div>

    <!-- Mobile Header -->
    <div class="d-md-none">
        <div class="d-flex align-items-center justify-content-center mb-3 position-relative mobile-header-container">
            <button class="btn btn-link p-0 back-link text-decoration-none position-absolute start-0" onclick="window.history.back()">
                <i class="bi bi-chevron-left mobile-back-chevron"></i>
            </button>
            <h2 class="fs-24 ff-default font-darkgray fw-400 mb-0">Your Information</h2>
        </div>
        
    </div>
    
    
    <!-- Selected Appointment Info -->
    <div class="selected-appointment-info mb-3 p-3 bg-white border rounded">
        <div class="fs-18 fw-bold info-item" id="edit-appointment-title">Consultation</div>
        <div class="text-muted info-item" id="edit-appointment-subtitle">SM Megamall - Face</div>
        <div class="text-muted info-item" id="edit-appointment-details">50 minutes &#64; ₱45.00</div>
        <div class="text-muted info-item" id="edit-appointment-fee">Reservation Fee: ₱90.00</div>
    </div>
    

    <!-- Medical History Form -->
    <div class="medical-history-section">
        <h5 class="medical-history-title">Medical History</h5>
        <p class="form-label fw-500 text-muted">Please make sure to give correct information because this is important for your check-up.</p>
        
        <br>
        <div class="mb-3">
            <label class="form-label fw-500">How old are you?</label>
            <input type="number" class="form-control compact-input" id="edit-age" placeholder="" min="1" max="99" maxlength="2" oninput="validateAge(this)">
        </div>
        
        <div class="mb-3">
            <label class="form-label fw-500">Do you have any allergies to medications?</label>
            <input type="text" class="form-control compact-input" id="edit-allergies" placeholder="">
        </div>
        
        <div class="mb-3">
            <label class="form-label fw-500">Do you have any family history of any conditions?</label>
            <input type="text" class="form-control compact-input" id="edit-family-history" placeholder="">
        </div>

            <br>
        
        <div class="continue-button-container">
            <button type="button" class="btn btn-primary py-3 continue-button" id="updateInformationBtn">
                Update Information
            </button>
        </div>
    </div>
</div>

@await Html.PartialAsync("../_Styles")

<style>
/* Additional page-specific styles if needed */
.selected-appointment-info {
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

.info-item {
    margin-bottom: 0.25rem;
}

.info-item:last-child {
    margin-bottom: 0;
}
</style>

<script>
// Get appointment ID from URL query parameter
const urlParams = new URLSearchParams(window.location.search);
const appointmentId = urlParams.get('id');

// Validate age input
function validateAge(input) {
    if (input.value.length > 2) {
        input.value = input.value.slice(0, 2);
    }
    if (input.value > 99) {
        input.value = 99;
    }
}

// Load appointment data when page loads
document.addEventListener('DOMContentLoaded', function() {
    if (appointmentId) {
        loadAppointmentData(appointmentId);
    }
});

function loadAppointmentData(id) {
    // In a real application, this would fetch from the server
    // For now, we'll use the same appointments data structure
    const appointments = [
        {
            id: 1,
            title: 'Eyebrow Thread',
            subtitle: 'SM Megamall - Face',
            duration: '50 minutes',
            price: '₱450.00',
            reservationFee: '₱90.00',
            formAnswers: [
                { question: 'How old are you?', answer: '24 years old' },
                { question: 'Do you have any allergies to medications?', answer: 'No' },
                { question: 'Do you have any family history of any conditions', answer: 'No' }
            ]
        },
        {
            id: 2,
            title: 'Consultation',
            subtitle: 'SM Megamall - Face',
            duration: '50 minutes',
            price: '₱450.00',
            reservationFee: '₱90.00',
            formAnswers: [
                { question: 'How old are you?', answer: '24 years old' },
                { question: 'Do you have any allergies to medications?', answer: 'No' },
                { question: 'Do you have any family history of any conditions', answer: 'No' }
            ]
        }
    ];
    
    const appointment = appointments.find(apt => apt.id == id);
    
    if (appointment) {
        // Update appointment info display
        document.getElementById('edit-appointment-title').textContent = appointment.title;
        document.getElementById('edit-appointment-subtitle').textContent = appointment.subtitle;
        document.getElementById('edit-appointment-details').textContent = `${appointment.duration} @@ ${appointment.price}`;
        document.getElementById('edit-appointment-fee').textContent = `Reservation Fee: ${appointment.reservationFee}`;
        
        // Pre-fill form fields with existing answers
        if (appointment.formAnswers && appointment.formAnswers.length > 0) {
            // Extract age from "24 years old" format
            const ageAnswer = appointment.formAnswers.find(qa => qa.question.includes('How old are you'));
            if (ageAnswer) {
                const ageMatch = ageAnswer.answer.match(/\d+/);
                if (ageMatch) {
                    document.getElementById('edit-age').value = ageMatch[0];
                }
            }
            
            // Fill allergies
            const allergiesAnswer = appointment.formAnswers.find(qa => qa.question.includes('allergies'));
            if (allergiesAnswer) {
                document.getElementById('edit-allergies').value = allergiesAnswer.answer;
            }
            
            // Fill family history
            const familyHistoryAnswer = appointment.formAnswers.find(qa => qa.question.includes('family history'));
            if (familyHistoryAnswer) {
                document.getElementById('edit-family-history').value = familyHistoryAnswer.answer;
            }
        }
    }
}

// Handle update button click
document.getElementById('updateInformationBtn').addEventListener('click', function() {
    const age = document.getElementById('edit-age').value;
    const allergies = document.getElementById('edit-allergies').value;
    const familyHistory = document.getElementById('edit-family-history').value;
    
    // Validate required fields
    if (!age) {
        alert('Please enter your age');
        return;
    }
    
    // In a real application, this would send data to the server
    console.log('Updating appointment information:', {
        appointmentId: appointmentId,
        age: age,
        allergies: allergies,
        familyHistory: familyHistory
    });
    
    // Show success message and redirect back to calendar
    alert('Information updated successfully!');
    window.location.href = '/Scheduler/user_view/Events';
});
</script>
